user nginx;
worker_processes  1;
events {
    worker_connections  10240;
}
http {
    log_format upstream_logging '[$time_local] $remote_addr - $remote_user - $server_name to: "$upstream": "$request" upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    server {
        listen       127.0.0.1:3000;
        server_name  localhost;

        location / {
            root /usr/share/nginx/html;
        }

        location /backend/ {
            # Use a variable so nginx will continue resolving the domain instead of only on startup
            # This is needed to account for backend pods churning.
            set        $upstream   http://backend.backend.svc.cluster.local/index.html;

            access_log /dev/stdout upstream_logging;            

            resolver           kube-dns.kube-system.svc.cluster.local;
            proxy_http_version 1.1;
            proxy_pass         $upstream;
        }
    }
}